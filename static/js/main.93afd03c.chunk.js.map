{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","listShift","isPrevDisabled","isNextDisabled","this","buttonsSwitch","props","infinite","setState","stepShift","getStepShift","prev","getShiftLimit","shiftLimit","images","length","frameSize","itemWidth","step","listStyles","transition","animationDuration","transform","imgStyles","width","wrapperStyles","className","type","onClick","handlePrevBtnClick","disabled","style","map","imgSrc","index","src","alt","String","handleNextBtnClick","React","Component","App","userNumInputs","value","key","name","defaultValue","onChange","event","handleInputChange","target","min","handleCheckboxChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93afd03c.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  listShift: number,\n  isPrevDisabled: boolean,\n  isNextDisabled: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    listShift: 0,\n    isPrevDisabled: false,\n    isNextDisabled: false,\n  };\n\n  componentDidMount() {\n    this.buttonsSwitch();\n  }\n\n  componentDidUpdate() {\n    if (this.props.infinite) {\n      if (this.state.isNextDisabled || this.state.isPrevDisabled) {\n        this.setState({ isPrevDisabled: false, isNextDisabled: false });\n      }\n\n      return;\n    }\n\n    this.buttonsSwitch();\n  }\n\n  handlePrevBtnClick() {\n    if (this.state.listShift > 0) {\n      let stepShift = this.getStepShift();\n\n      if ((this.state.listShift - stepShift) < 0) {\n        stepShift = this.state.listShift;\n      }\n\n      this.setState(prev => ({\n        listShift: prev.listShift - stepShift,\n      }));\n\n      return;\n    }\n\n    if (this.props.infinite && this.state.listShift === 0) {\n      this.setState({ listShift: this.getShiftLimit() });\n    }\n  }\n\n  handleNextBtnClick() {\n    const shiftLimit = this.getShiftLimit();\n\n    if (this.state.listShift < shiftLimit) {\n      let stepShift = this.getStepShift();\n\n      if ((this.state.listShift + stepShift) > shiftLimit) {\n        stepShift = shiftLimit - this.state.listShift;\n      }\n\n      this.setState(prev => ({\n        listShift: prev.listShift + stepShift,\n      }));\n\n      return;\n    }\n\n    if (this.props.infinite && this.state.listShift === shiftLimit) {\n      this.setState({ listShift: 0 });\n    }\n  }\n\n  getShiftLimit() {\n    return (this.props.images.length - this.props.frameSize)\n       * this.props.itemWidth;\n  }\n\n  getStepShift() {\n    return this.props.step * this.props.itemWidth;\n  }\n\n  buttonsSwitch(): void {\n    if (this.state.isPrevDisabled && this.state.listShift > 0) {\n      this.setState({ isPrevDisabled: false });\n\n      return;\n    }\n\n    if (this.state.listShift <= 0 && !this.state.isPrevDisabled) {\n      this.setState({ isPrevDisabled: true });\n\n      return;\n    }\n\n    const shiftLimit = this.getShiftLimit();\n\n    if (this.state.listShift >= shiftLimit && !this.state.isNextDisabled) {\n      this.setState({ isNextDisabled: true });\n\n      return;\n    }\n\n    if (this.state.isNextDisabled && this.state.listShift < shiftLimit) {\n      this.setState({ isNextDisabled: false });\n    }\n  }\n\n  render(): React.ReactNode {\n    const listStyles: React.CSSProperties = {\n      transition: `transform ${this.props.animationDuration}ms`,\n      transform: `translateX(-${this.state.listShift}px)`,\n    };\n    const imgStyles: React.CSSProperties = {\n      width: `${this.props.itemWidth}px`,\n    };\n    const wrapperStyles: React.CSSProperties = {\n      width: `${this.props.frameSize * this.props.itemWidth}px`,\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => (this.handlePrevBtnClick())}\n          disabled={this.state.isPrevDisabled}\n        >\n          ⬅️\n        </button>\n        <div\n          className=\"Carousel__wrapper\"\n          style={wrapperStyles}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={listStyles}\n          >\n            {this.props.images.map((imgSrc, index) => (\n              <li key={imgSrc}>\n                <img\n                  src={imgSrc}\n                  alt={String(index)}\n                  style={imgStyles}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => (this.handleNextBtnClick())}\n          disabled={this.state.isNextDisabled}\n          data-cy=\"next\"\n        >\n          ➡️\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  userNumInputs: {\n    step: number,\n    frameSize: number,\n    itemWidth: number,\n    animationDuration: number,\n  },\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    userNumInputs: {\n      step: 3,\n      frameSize: 3,\n      itemWidth: 130,\n      animationDuration: 1000,\n    },\n    infinite: false,\n  };\n\n  handleInputChange(\n    value: string,\n    key: (keyof State['userNumInputs']),\n  ) {\n    return this.setState((prev) => ({\n      userNumInputs: {\n        ...prev.userNumInputs,\n        [key]: +value,\n      },\n    }));\n  }\n\n  handleCheckboxChange() {\n    return this.setState(prev => ({ infinite: !prev.infinite }));\n  }\n\n  render() {\n    const {\n      images,\n      userNumInputs,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1\n          className=\"app__title\"\n          data-cy=\"title\"\n        >\n          Carousel with\n          {images.length}\n          images\n        </h1>\n        <Carousel\n          images={images}\n          step={userNumInputs.step}\n          frameSize={userNumInputs.frameSize}\n          itemWidth={userNumInputs.itemWidth}\n          animationDuration={userNumInputs.animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"app__form\">\n          <label className=\"app__input\">\n            <span>Step</span>\n\n            <input\n              name=\"step\"\n              type=\"number\"\n              defaultValue={userNumInputs.step}\n              onChange={\n                event => this.handleInputChange(event.target.value, 'step')\n              }\n              min={0}\n              step={1}\n            />\n          </label>\n\n          <label className=\"app__input\">\n            <span>Frame size</span>\n\n            <input\n              name=\"frameSize\"\n              type=\"number\"\n              defaultValue={userNumInputs.frameSize}\n              onChange={\n                event => this.handleInputChange(event.target.value, 'frameSize')\n              }\n              min={0}\n              step={1}\n            />\n          </label>\n\n          <label className=\"app__input\">\n            <span>Item width</span>\n\n            <input\n              name=\"itemWidth\"\n              type=\"number\"\n              defaultValue={userNumInputs.itemWidth}\n              onChange={\n                event => this.handleInputChange(event.target.value, 'itemWidth')\n              }\n              min={0}\n              step={10}\n            />\n          </label>\n\n          <label className=\"app__input\">\n            <span>Animation duration</span>\n\n            <input\n              name=\"animationDuration\"\n              type=\"number\"\n              defaultValue={userNumInputs.animationDuration}\n              onChange={\n                event => this.handleInputChange(\n                  event.target.value, 'animationDuration',\n                )\n              }\n              min={0}\n              step={100}\n            />\n          </label>\n\n          <label>\n            Infinite\n            <input\n              name=\"Infinite\"\n              type=\"checkbox\"\n              onChange={() => (this.handleCheckboxChange())}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}